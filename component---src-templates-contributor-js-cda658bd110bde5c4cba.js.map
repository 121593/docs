{"version":3,"sources":["webpack:///./src/components/common/Grid.js","webpack:///./src/con/hooks/useContributorConferences.tsx","webpack:///./src/con/components/2021/ContributorConference/index.tsx","webpack:///./src/templates/contributor.js","webpack:///./src/helpers/contributorHelper.js"],"names":["Grid","left","children","className","classnames","defaultProps","GridItem","padding","limitWidth","full","autosize","auto","useContributorConferences","login","data","useStaticQuery","speaker","speakers","nodes","find","speakerData","frontmatter","github","conferences","filter","conferenceData","includes","id","map","conference","title","headings","value","slug","fields","collection","replace","ContributorConference","ids","speakersName","allMarkdownRemark","edition","name","join","href","Web","src","Logo","alt","width","height","externalLinkAttributes","GithubInfo","icon","link","githubLink","charAt","substring","rel","target","Template","text","location","contributor","pageContext","repositoryCount","projects","length","repositoryText","contributorName","getName","Layout","position","avatar","isCoreTeam","bio","dangerouslySetInnerHTML","__html","url","githubResource","trim","company","blog","to","contributions","reposName","p","lastRepo","pop","getProjectsText","project","fullName","additions","deletions","teams"],"mappings":"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","file":"component---src-templates-contributor-js-cda658bd110bde5c4cba.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const Grid = ({ left, children, className }) => (\n  <div className={classnames(className, 'grid__container', { left })}>{children}</div>\n);\n\nGrid.propTypes = {\n  left: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nGrid.defaultProps = {\n  left: false,\n  className: '',\n};\n\nexport const GridItem = ({ className, padding, limitWidth, full, children, autosize }) => (\n  <div\n    className={classnames(className, 'grid__item', {\n      [`p-${padding}`]: !!padding || 0 === padding,\n      'no-min': !limitWidth,\n      auto: autosize,\n      full,\n    })}\n  >\n    {children}\n  </div>\n);\n\nGridItem.propTypes = {\n  full: PropTypes.bool,\n  padding: PropTypes.number,\n  limitWidth: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  autosize: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  full: false,\n  limitWidth: true,\n  padding: null,\n  className: '',\n  autosize: false,\n};\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useContributorConferences: (login?: string) => Conference[] = (login) => {\n  const data = useStaticQuery(graphql`\n    query {\n      conferences: allMarkdownRemark(limit: 100, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n      speakers: allMarkdownRemark(limit: 100, filter: { frontmatter: { type: { eq: \"speaker\" } } }) {\n        nodes {\n          frontmatter {\n            id\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const speaker = data.speakers.nodes.find((speakerData) => speakerData.frontmatter.github === login);\n\n  const conferences = speaker\n    ? data.conferences.nodes\n        .filter((conferenceData) => conferenceData.frontmatter.speakers.includes(speaker.frontmatter.id))\n        .map((conference) => ({\n          ...conference.frontmatter,\n          title: conference.headings?.[0].value,\n          slug: `/con/${conference.fields.collection.replace('con', '')}${conference.fields.slug}`,\n        }))\n    : [];\n\n  return conferences;\n};\n\nexport default useContributorConferences;\n","import React from 'react';\nimport Web from '@con/components/common/Web';\nimport { Conference } from 'src/con/types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Logo from '@con/images/logo.svg';\n\nconst ContributorConference: React.ComponentType<{ conference: Conference }> = ({ conference }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n            collection\n          }\n          frontmatter {\n            name\n            id\n            job\n            company\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const ids = conference.speakers;\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: `/con/${conference.edition}${speaker.fields.slug}`,\n    }));\n\n  const speakersName = speakers.map((speaker) => speaker.name).join(' & ');\n\n  return (\n    <a href={conference.slug} className=\"contributor__conference card clickable\">\n      <Web className=\"web\" />\n      <div className=\"conference__content\">\n        <img src={Logo} alt=\"Api Platform Conference\" width=\"200\" height=\"80\" />\n        <span className=\"conference__title lined\">{conference.title}</span>\n        <p className=\"conference__speaker h6\">{speakersName}</p>\n      </div>\n    </a>\n  );\n};\n\nexport default ContributorConference;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport useContributorConferences from '@con/hooks/useContributorConferences';\nimport Layout from '@components/Layout';\nimport { Link } from 'gatsby';\nimport { Grid, GridItem } from '@components/common/Grid';\nimport ContributorConference from '@con/components/2021/ContributorConference';\nimport { isCoreTeam, getName } from '../helpers/contributorHelper';\n\nconst externalLinkAttributes = 'target=\"_blank\" rel=\"nofollow noopener noreferrer\"';\n\nconst parseGithubText = (text) => {\n  const urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gi;\n\n  const linkifyText = text.replace(urlRegex, (url) => `<a href=\"${url}\" ${externalLinkAttributes}\">${url}</a>`);\n  const githubRegex = /(^|\\s)@([a-zA-Z-]+)/gi;\n\n  return linkifyText.replace(\n    githubRegex,\n    (githubResource) =>\n      `<a href=\"https://github.com/${githubResource\n        .trim()\n        .replace('@', '')}\" ${externalLinkAttributes}\">${githubResource}</a>`\n  );\n};\n\nconst GithubInfo = ({ value, icon, link }) => {\n  const githubLink = '@' === value.charAt(0) ? `https://github.com/${value.substring(1)}` : null;\n\n  if (link || githubLink) {\n    return (\n      <a rel=\"nofollow noopener noreferrer\" target=\"_blank\" href={link || githubLink} className=\"contributor__info\">\n        <span className={`icon-${icon}`} />\n        {'@' === value.charAt(0) ? value.substring(1) : value}\n      </a>\n    );\n  }\n\n  return (\n    <p className=\"contributor__info\">\n      <span className={`icon-${icon}`} />\n      {value}\n    </p>\n  );\n};\n\nGithubInfo.propTypes = {\n  value: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  link: PropTypes.string,\n};\n\nGithubInfo.defaultProps = {\n  link: null,\n};\n\nconst Template = ({ location, pageContext: contributor }) => {\n  const repositoryCount = contributor.projects.length;\n\n  const repositoryText = 1 < repositoryCount ? `${repositoryCount} repositories` : `${repositoryCount} repository`;\n\n  const contributorName = getName(contributor);\n\n  const getContributionsText = () => {\n    if (10 >= contributor.position) {\n      return `${\n        isCoreTeam(contributor) ? 'As an API Platform core team member, ' : ''\n      }${contributorName} is one of the most active contributors to the API Platform framework and worked on`;\n    }\n    if (20 < contributor.contributions) {\n      return `${\n        isCoreTeam(contributor) ? 'As an API Platform core team member, ' : ''\n      }${contributorName} enhanced the API Platform framework with no less than ${\n        contributor.contributions\n      } contributions. This active contributor worked on`;\n    }\n    return `${contributorName} is a ${\n      isCoreTeam(contributor) ? 'core team member and a ' : ''\n    }contributor to the API Platform framework and worked on`;\n  };\n\n  const getProjectsText = () => {\n    if (!repositoryCount) return '';\n    const reposName = contributor.projects.map((p) => `<a href=\"${p.link}\" ${externalLinkAttributes}>${p.name}</a>`);\n    if (1 === reposName.length) return reposName[0];\n    const lastRepo = reposName.pop();\n    return `${reposName.join(', ')} and ${lastRepo}`;\n  };\n\n  /* API PLATFORM CON */\n  const conferences = useContributorConferences(`https://github.com/${contributor.login}`);\n\n  return (\n    <Layout location={location}>\n      <div className=\"contributor\">\n        <Helmet title={`${contributorName}, API Platform contributor`} />\n        <header className=\"contributor__header bg-blue-extralight\">\n          <div className=\"container\">\n            <div className=\"header__content\">\n              <p className=\"h1-like header__title color-blue-dark\">{`Contributor #${contributor.position}`}</p>\n            </div>\n          </div>\n        </header>\n        <section>\n          <div className=\"container contributor__main\">\n            <div className=\"contributor__card\">\n              <div className=\"card__top bg-blue-dark color-white\">\n                <div className=\"contributor__picture\">\n                  <div className=\"avatar crop\">\n                    <img src={contributor.avatar} alt={contributor.login} />\n                  </div>\n                  {isCoreTeam(contributor) && (\n                    <img\n                      className=\"contributor__badge\"\n                      src=\"/badges/core-team.svg\"\n                      alt=\"core-team\"\n                      title=\"Core team member\"\n                    />\n                  )}\n                </div>\n                <div className=\"card__content\">\n                  <h1 className=\"h1-like color-white\">{contributorName}</h1>\n                  <p className=\"contributor__subtitle color-blue-extralight\">{`(${contributor.login})`}</p>\n                  {contributor.bio && (\n                    <p\n                      className=\"contributor__bio\"\n                      dangerouslySetInnerHTML={{\n                        __html: parseGithubText(contributor.bio),\n                      }}\n                    />\n                  )}\n                  <div className=\"contributor__infos\">\n                    {contributor.location && <GithubInfo icon=\"location\" value={contributor.location} />}\n                    {contributor.company && <GithubInfo icon=\"office\" value={contributor.company} />}\n                    {contributor.blog && <GithubInfo icon=\"sphere\" link={contributor.blog} value=\"website\" />}\n                    <GithubInfo icon=\"github\" value={`@${contributor.login}`} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"contributor__content\">\n              {conferences.length ? (\n                <div className=\"contributor__conferences\">\n                  {conferences.length && (\n                    <p className=\"text-big\">\n                      <span>{`Don't miss ${contributorName}'s talk at the `}</span>\n                      <Link to=\"/con/2021/\">API Platform Conference</Link>\n                      <span>!</span>\n                    </p>\n                  )}\n                  <div className=\"contributor__conferences-list conf\">\n                    {conferences.map((conference) => (\n                      <ContributorConference conference={conference} />\n                    ))}\n                  </div>\n                </div>\n              ) : null}\n              <div className=\"contributor__description\">\n                <p\n                  className=\"text-big\"\n                  dangerouslySetInnerHTML={{\n                    __html: `${getContributionsText()} ${repositoryText}: ${getProjectsText()}.`,\n                  }}\n                />\n              </div>\n              <Grid className=\"contributor__projects\">\n                {contributor.projects.map((project) => (\n                  <GridItem padding={5}>\n                    <a\n                      href={`https://github.com/${project.fullName}/commits?author=${contributor.login}`}\n                      className=\"contributor__project card p-10 clickable\"\n                      rel=\"nofollow noopener noreferrer\"\n                      target=\"_blank\"\n                    >\n                      <p className=\"project__name text-big\">\n                        <span className=\"icon-github\" />\n                        {project.name}\n                      </p>\n                      <p className=\"project__contributions text-xs\">{`${project.contributions} ${\n                        1 < project.contributions ? 'contributions' : 'contribution'\n                      }`}</p>\n                      <p className=\"project__lines text-xs\">\n                        {project.additions || project.deletions ? (\n                          <>\n                            <span>{`${project.additions}++`}</span>\n                            <span>{`${project.deletions}--`}</span>\n                          </>\n                        ) : (\n                          <span className=\"no-stat\">(no stats)</span>\n                        )}\n                      </p>\n                    </a>\n                  </GridItem>\n                ))}\n              </Grid>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Template;\n\nTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n};\n","export const isCoreTeam = (contributor) =>\n  contributor.teams &&\n  (contributor.teams.includes('core-team') ||\n    contributor.teams.includes('core-team-js') ||\n    contributor.teams.includes('core-team-website'));\n\nexport const getName = (contributor) => contributor.name || contributor.login;\n"],"sourceRoot":""}