{"version":3,"sources":["webpack:///./src/components/common/Grid.js","webpack:///./src/components/con/2021/images/logo.svg","webpack:///./src/components/con/2021/Speakers/SpeakerCircle.tsx","webpack:///./src/helmetConfig.js","webpack:///./src/pages/con/2021/speakers/index.tsx","webpack:///./src/components/con/2021/layout/Footer.tsx","webpack:///./src/components/con/2021/data/nav.ts","webpack:///./src/components/con/2021/data/prices.ts","webpack:///./src/components/con/2021/data/meta.ts","webpack:///./src/components/con/2021/layout/index.tsx","webpack:///./src/components/con/2021/hooks/useSpeakers.tsx","webpack:///./src/components/con/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/components/con/2021/common/SectionTitle.tsx"],"names":["Grid","left","children","className","classnames","defaultProps","GridItem","padding","limitWidth","full","autosize","auto","module","exports","SpeakerCircle","speaker","social","hoverable","id","name","job","images","useStaticQuery","allFile","nodes","find","imageData","image","getImage","speakerData","jobTitle","type","JSON","stringify","classNames","href","slug","alt","xmlns","viewBox","d","head","titleTemplate","defaultTitle","meta","content","charset","property","process","link","rel","sizes","Conf2021","speakers","useSpeakers","logoAlwaysVisible","h1","dark","map","Footer","src","Logo","target","LogoTilleuls","width","Wave","nav","logoLink","backLink","to","text","links","mobileOnly","prices","title","languages","offers","limitDate","price","TITLE","DESCRIPTION","OG_IMAGE","dayjs","extend","localizedFormat","SectionsContext","createContext","Layout","offersData","sortedOffers","sort","a","b","isAfter","activeOffer","offer","length","availability","priceCurrency","url","validFrom","eventData","description","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","useState","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","Provider","value","helmetConfig","defer","Nav","edition","MobileNav","ids","allMarkdownRemark","filter","includes","frontmatter","fields","SpeakerSocialList","github","twitter","SectionTitle","lined","small"],"mappings":"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","file":"component---src-pages-con-2021-speakers-index-tsx-a36d5617b5684c3f32e3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const Grid = ({ left, children, className }) => (\n  <div className={classnames(className, 'grid__container', { left })}>{children}</div>\n);\n\nGrid.propTypes = {\n  left: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nGrid.defaultProps = {\n  left: false,\n  className: '',\n};\n\nexport const GridItem = ({ className, padding, limitWidth, full, children, autosize }) => (\n  <div\n    className={classnames(className, 'grid__item', {\n      [`p-${padding}`]: !!padding || 0 === padding,\n      'no-min': !limitWidth,\n      auto: autosize,\n      full,\n    })}\n  >\n    {children}\n  </div>\n);\n\nGridItem.propTypes = {\n  full: PropTypes.bool,\n  padding: PropTypes.number,\n  limitWidth: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  autosize: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  full: false,\n  limitWidth: true,\n  padding: null,\n  className: '',\n  autosize: false,\n};\n","module.exports = __webpack_public_path__ + \"static/logo-7627efc8539d857dc967c0ab41828c8c.svg\";","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Speaker } from '../types';\nimport SpeakerSocialList from './SpeakerSocialList';\n\ninterface SpeakerCircleProps {\n  speaker: Speaker;\n  social?: boolean;\n  hoverable?: boolean;\n}\n\nconst SpeakerCircle: React.ComponentType<SpeakerCircleProps> = ({ speaker, social = true, hoverable = true }) => {\n  const { id, name, job } = speaker;\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 240, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const images = data.allFile.nodes.find((imageData) => imageData.name === id);\n  const image = images && getImage(images);\n\n  const speakerData = {\n    '@context': 'http://schema.org',\n    '@type': 'Person',\n    name: speaker.name,\n    jobTitle: speaker.job,\n  };\n\n  return (\n    <div className=\"conf__speaker-resume\">\n      <Helmet>\n        <script type=\"application/ld+json\">{JSON.stringify(speakerData)}</script>\n      </Helmet>\n      <a className={classNames('conf__speaker-content', { hoverable })} href={speaker.slug}>\n        <div className=\"circle__effect\">\n          <div className=\"circle\">\n            <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            <svg className=\"circle__plus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 281.49 281.49\">\n              <path d=\"M140.74,0C63.14,0,0,63.14,0,140.74S63.14,281.49,140.74,281.49s140.75-63.14,140.75-140.75S218.35,0,140.74,0Zm0,263.49A122.75,122.75,0,1,1,263.49,140.74,122.88,122.88,0,0,1,140.74,263.49Z\" />\n              <path d=\"M210.91,131.74H149.74V70.58a9,9,0,1,0-18,0v61.16H70.58a9,9,0,1,0,0,18h61.16v61.17a9,9,0,0,0,18,0V149.74h61.17a9,9,0,0,0,0-18Z\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"infos\">\n          <span className=\"overline\">{job}</span>\n          <h3 className=\"h5 lined\">{name}</h3>\n        </div>\n      </a>\n      {social && <SpeakerSocialList speaker={speaker} />}\n    </div>\n  );\n};\n\nexport default SpeakerCircle;\n","export default {\n  head: {\n    titleTemplate: 'API Platform: %s',\n    defaultTitle: 'API Platform',\n    meta: [\n      {\n        name: 'description',\n        content: 'REST and GraphQL framework on top of Symfony and React',\n      },\n      { charset: 'utf-8' },\n      { name: 'theme-color', content: '#38a9b4' },\n      { property: 'og:site_name', content: 'API Platform' },\n      {\n        property: 'og:image',\n        content: `${process.env.GATSBY_ROOT_URL}/logo.png`,\n      },\n      { property: 'og:image:type', content: 'image/png' },\n      { property: 'og:locale', content: 'en_US' },\n      { property: 'og:title', content: 'API Platform' },\n      {\n        property: 'og:description',\n        content: 'REST and GraphQL framework on top of Symfony and React',\n      },\n      { property: 'og:site', content: '@ApiPlatform' },\n      { property: 'og:creator', content: '@dunglas' },\n      { property: 'og:image:width', content: '1200' },\n      { property: 'og:image:height', content: '630' },\n      { property: 'twitter:site', content: '@ApiPlatform' },\n    ],\n    link: [\n      {\n        rel: 'apple-touch-icon',\n        sizes: '180x180',\n        href: '/apple-touch-icon.png',\n      },\n      {\n        rel: 'icon',\n        sizes: '32x32',\n        href: '/favicon.ico',\n      },\n      {\n        rel: 'icon',\n        type: 'image/svg+xml',\n        href: '/icon.svg',\n      },\n    ],\n  },\n};\n","import React from 'react';\nimport { Grid, GridItem } from '@components/common/Grid';\nimport Layout from '@components/con/2021/layout';\nimport useSpeakers from '@components/con/2021/hooks/useSpeakers';\nimport SectionTitle from '@components/con/2021/common/SectionTitle';\nimport { PageProps } from 'gatsby';\nimport SpeakerCircle from '@components/con/2021/Speakers/SpeakerCircle';\nimport ContactCard from '@con/common/ContactCard';\n\nconst Conf2021: React.ComponentType<PageProps> = () => {\n  const speakers = useSpeakers();\n\n  return (\n    <Layout logoAlwaysVisible>\n      <div className=\"conf__speakers-list\">\n        <div className=\"container\">\n          <div className=\"speakers__header\">\n            <SectionTitle h1 dark>\n              Meet our <strong>speakers</strong>\n            </SectionTitle>\n            <p className=\"conf__section-subtitle\">\n              Join international speakers sharing their knowledge on English-speaking (streamed online) and\n              French-speaking tracks.\n            </p>\n          </div>\n          <div className=\"speakers-list__content\">\n            <Grid className=\"speakers-list__grid\">\n              {speakers.map((speaker) => (\n                <GridItem>\n                  <SpeakerCircle speaker={speaker} />\n                </GridItem>\n              ))}\n            </Grid>\n          </div>\n        </div>\n      </div>\n      <div className=\"conf__contact\">\n        <ContactCard />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Conf2021;\n","import Wave from '@con/common/Wave';\nimport React from 'react';\nimport LogoTilleuls from '@con/common/LogoTilleuls';\nimport Logo from '../images/logo.svg';\n\nconst Footer: React.ComponentType = () => (\n  <div className=\"conf__footer\">\n    <div className=\"container\">\n      <div className=\"footer__columns\">\n        <div className=\"footer__event\">\n          <img src={Logo} className=\"footer__logo\" alt=\"Api Platform Conference\" />\n          <span className=\"footer__by\">an event by</span>\n          <a className=\"footer__tilleuls\" href=\"https://les-tilleuls.coop/en\" target=\"_blank\" rel=\"noreferrer noopener\">\n            <LogoTilleuls width=\"100%\" />\n          </a>\n        </div>\n        <div className=\"footer__column\">\n          <span className=\"h6 footer__title\">The event</span>\n          <a href=\"/con/2021/speakers\">Speakers</a>\n          <a href=\"/con/2021/#schedule\">Schedule</a>\n          <a href=\"/con/2021/#venue\">Venue</a>\n          <a href=\"/con/\">Other editions</a>\n        </div>\n        <div className=\"footer__column\">\n          <span className=\"h6 footer__title\">Legal</span>\n          <a href=\"/con/2021/code-of-conduct\">Code of conduct</a>\n          <a href=\"/con/2021/faq\">FAQ</a>\n          <a href=\"/con/2021/transparency\">Revenues transparency</a>\n        </div>\n      </div>\n      <span className=\"body2 footer__copyright\">\n        Copyright © 2021{' '}\n        <a href=\"https://les-tilleuls.coop/en\" target=\"_blank\" rel=\"noreferrer noopener\">\n          Les-Tilleuls.coop\n        </a>\n      </span>\n    </div>\n    <Wave className=\"footer__wave\" />\n  </div>\n);\n\nexport default Footer;\n","const nav = {\n  logoLink: '/con/2021',\n  backLink: {\n    to: '/con/',\n    text: 'Back to current edition',\n  },\n  links: [\n    {\n      to: '/con/2021/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2021/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2021/#schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2021/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2021/review',\n      text: 'Review',\n    },\n  ],\n};\n\nexport default nav;\n","import { Price } from '../types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'On-site edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Early bird',\n        limitDate: '2021-04-30',\n        price: 69,\n      },\n      {\n        title: 'Regular ticket',\n        limitDate: '2021-08-20',\n        price: 89,\n      },\n      {\n        title: 'Late bird',\n        limitDate: '2021-09-09',\n        price: 109,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Online edition',\n    languages: 'English-speaking track',\n    offers: [\n      {\n        title: 'Online ticket',\n        limitDate: '2021-09-08',\n        price: 39,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","export const TITLE = 'API Platform Conference 2021';\nexport const DESCRIPTION = 'The first international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook.png`;\n","import React, { createContext, useState, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport '@styles/components/con/2021/index.scss';\nimport Footer from '@components/con/2021/layout/Footer';\nimport Nav from '@con/layout/Nav';\nimport MobileNav from '@components/con/layout/MobileNav';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport PreloadFonts from '@con/layout/Fonts';\nimport nav from '@components/con/2021/data/nav';\nimport prices from '@con/2021/data/prices';\nimport { ConfContext } from '@con/layout';\nimport { useLocation } from '@reach/router';\nimport { DESCRIPTION, TITLE, OG_IMAGE } from '../data/meta';\nimport helmetConfig from '../../../../helmetConfig';\n\ndayjs.extend(localizedFormat);\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nexport const SectionsContext = createContext<SectionsContextInterface>(null);\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  dayjs.extend(localizedFormat);\n\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2021-tickets-146559873527',\n      validFrom: '2021-03-19',\n    };\n  });\n\n  const websiteData = {\n    '@context': 'https://schema.org',\n    '@type': 'Website',\n    name: 'API Platform Conference',\n    url: 'https://api-platform.com/con/2021/',\n  };\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2021',\n    description: 'The first international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2021/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2021-09-10',\n    endDate: '2021-09-10',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2021/',\n      },\n    ],\n    image: OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet {...helmetConfig.head}>\n          <title>{TITLE}</title>\n          <meta name=\"description\" content={DESCRIPTION} />\n          <meta property=\"og:url\" content=\"https://api-platform.com/con/2021/\" />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:title\" content={TITLE} />\n          <meta property=\"og:description\" content={DESCRIPTION} />\n          <meta property=\"og:image\" content={OG_IMAGE} />\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:creator\" content=\"@coopTilleuls\" />\n          <meta name=\"twitter:title\" content={TITLE} />\n          <meta name=\"twitter:description\" content={DESCRIPTION} />\n          <meta name=\"twitter:image\" content={OG_IMAGE} />\n\n          <script type=\"application/ld+json\">{JSON.stringify(websiteData)}</script>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n          <style type=\"text/css\">{`\n          body, html {\n            background-color: #001226;\n          }\n    `}</style>\n        </Helmet>\n        <PreloadFonts />\n        <div className=\"conf conf__layout\" id=\"conf\">\n          <div className=\"conf__background\" />\n          <Nav logoAlwaysVisible={logoAlwaysVisible} edition=\"2021\" />\n          <MobileNav />\n          <div className=\"conf__content\">\n            {children}\n            <Footer />\n          </div>\n        </div>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { Speaker } from '../types';\n\nconst useSpeakers: (ids?: string[]) => Speaker[] = (ids) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            name\n            id\n            job\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: speaker.fields.slug,\n    }));\n\n  return speakers;\n};\n\nexport default useSpeakers;\n","import React from 'react';\nimport { Speaker } from '../types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n"],"sourceRoot":""}