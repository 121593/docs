{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2022/prices.ts","webpack:///./src/con/data/2022/extraConferences.ts","webpack:///./src/con/components/2022/ScheduleDay.tsx","webpack:///./src/con/components/2022/SchedulePage.tsx","webpack:///./src/pages/con/2022/schedule.tsx","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/components/2021/Schedule/SlotAvatar.tsx","webpack:///./src/con/components/2021/Schedule/SlotItem.tsx","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/hooks/useConferences.tsx","webpack:///./src/con/data/2022/nav.ts","webpack:///./src/con/data/2022/footer.ts","webpack:///./src/con/data/2022/meta.ts","webpack:///./src/con/components/2022/layout/index.tsx","webpack:///./src/con/hooks/useSpeakers.tsx","webpack:///./src/con/utils.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","SectionTitle","dark","lined","h1","prices","id","title","languages","offers","limitDate","price","extra","date","start","end","type","track","ScheduleByTrack","conferences","filter","conference","sort","sortByStartDate","data-value","map","key","SlotItem","ScheduleDay","day","times","reduce","acc","includes","push","getConferenceDate","style","gridColumn","gridRow","aria-hidden","time","replace","SchedulePage","useConferences","days","sortedDays","Object","keys","a","b","date1","dayjs","date2","isBefore","isAfter","index","ContactCard","Schedule","logoAlwaysVisible","Helmet","property","content","name","SectionsContext","createContext","useEventBriteModal","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","Avatar","speakers","data","useStaticQuery","getSize","total","speaker","image","getImage","allFile","nodes","find","imageData","width","length","height","left","top","alt","animated","slug","useSpeakers","uniqueCompanies","Array","from","Set","company","getConferenceTimes","job","join","xmlns","viewBox","d","BuyButton","edition","allMarkdownRemark","conferenceData","frontmatter","fields","collection","headings","value","nav","logoLink","links","text","mobileOnly","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","sortedOffers","activeOffer","offer","availability","priceCurrency","url","validFrom","eventData","description","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","JSON","stringify","defer","LayoutBase","navButton","ids","speakerData","conference1","conference2","toLocaleDate","format","convertTime","isMorningTime","parseInt","split"],"mappings":"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","file":"component---src-pages-con-2022-schedule-tsx-cbdf386a1a29d18a53af.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Price } from '@con/types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'On-site edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Early bird',\n        limitDate: '2022-05-06',\n        price: 89,\n      },\n      {\n        title: 'Regular ticket',\n        limitDate: '2022-08-19',\n        price: 129,\n      },\n      {\n        title: 'Late bird',\n        limitDate: '2022-09-14',\n        price: 169,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Online edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Online ticket',\n        limitDate: '2022-09-13',\n        price: 59,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","const extra = [\n  {\n    title: 'Morning break',\n    date: '2022-09-15',\n    start: '10:40',\n    end: '11:05',\n    type: 'break',\n  },\n  {\n    title: 'Lunch break',\n    date: '2022-09-15',\n    start: '12:35',\n    end: '14:00',\n    type: 'break',\n  },\n  {\n    title: 'Afternoon break',\n    date: '2022-09-15',\n    start: '16:20',\n    end: '16:40',\n    type: 'break',\n  },\n  {\n    title: 'Community event',\n    date: '2022-09-15',\n    start: '18:00',\n    end: '18:45',\n    type: 'break',\n  },\n  {\n    title: 'Morning break',\n    date: '2022-09-16',\n    start: '10:40',\n    end: '11:05',\n    type: 'break',\n  },\n  {\n    title: 'Lunch break',\n    date: '2022-09-16',\n    start: '12:35',\n    end: '14:00',\n    type: 'break',\n  },\n  {\n    title: 'Afternoon break',\n    date: '2022-09-16',\n    start: '16:20',\n    end: '16:40',\n    type: 'break',\n  },\n  {\n    title: 'Upcoming',\n    date: '2022-09-15',\n    start: '15:40',\n    end: '16:20',\n    track: 'FR',\n    type: 'upcoming',\n  },\n  {\n    title: 'Upcoming',\n    date: '2022-09-15',\n    start: '16:40',\n    end: '17:20',\n    track: 'FR',\n    type: 'upcoming',\n  },\n  {\n    title: 'Upcoming',\n    date: '2022-09-16',\n    start: '14:50',\n    end: '15:30',\n    track: 'FR',\n    type: 'upcoming',\n  },\n  {\n    title: 'Upcoming',\n    date: '2022-09-16',\n    start: '15:40',\n    end: '16:20',\n    track: 'EN',\n    type: 'upcoming',\n  },\n];\n\nexport default extra;\n","import React from 'react';\nimport { getConferenceDate, sortByStartDate } from '@con/utils';\nimport { Conference } from '@con/types';\nimport '@con/styles/index.scss';\nimport SlotItem from '../2021/Schedule/SlotItem';\n\nconst ScheduleByTrack: React.ComponentType<{ track: string; conferences: Conference[] }> = ({\n  track,\n  conferences: allConferences,\n}) => {\n  const conferences = allConferences\n    .filter((conference) => conference.track === track || !conference.track)\n    .sort(sortByStartDate);\n\n  return (\n    <div className=\"schedule-day__grid\">\n      <div className=\"schedule-day__track\">\n        <div className=\"h5\" data-value=\"day\">{`Track #${track}`}</div>\n      </div>\n      {conferences.map((conference) => (\n        <div key={`${conference.title} ${conference.start} ${conference.date}`} className=\"schedule-day__slot\">\n          {conference.type ? (\n            <div className={`schedule-day__slot-extra schedule-day__slot-extra-${conference.type}`}>\n              <span className=\"h6\">{conference.title}</span>\n            </div>\n          ) : (\n            <SlotItem conference={conference} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\ninterface ScheduleDayProps {\n  day: number;\n  date: string;\n  conferences: Conference[];\n}\n\nconst ScheduleDay: React.ComponentType<ScheduleDayProps> = ({ day, date, conferences }) => {\n  const times = conferences.reduce((acc, conference) => {\n    if (!acc.includes(conference.start)) acc.push(conference.start);\n    if (!acc.includes(conference.end)) acc.push(conference.end);\n    return acc;\n  }, []);\n\n  return (\n    <div className=\"schedule__day\">\n      <h2 className=\"schedule-day__title\">Day {day}</h2>\n      <span className=\"schedule-day__date overline\">{getConferenceDate(date)}</span>\n      <div className=\"schedule-day__card schedule__mobile\">\n        <ScheduleByTrack conferences={conferences} track=\"EN\" />\n      </div>\n      <div className=\"schedule-day__card schedule__mobile\">\n        <ScheduleByTrack conferences={conferences} track=\"FR\" />\n      </div>\n      <div className=\"schedule-day__card\">\n        <div className=\"schedule-day__tracks\">\n          <span\n            className=\"schedule-day__track-slot\"\n            style={{ gridColumn: 'track-EN', gridRow: 'tracks' }}\n            aria-hidden=\"true\"\n          >\n            Track EN\n          </span>\n          <span\n            className=\"schedule-day__track-slot\"\n            style={{ gridColumn: 'track-FR', gridRow: 'tracks' }}\n            aria-hidden=\"true\"\n          >\n            Track FR\n          </span>\n        </div>\n        <div className=\"schedule-day__grid\">\n          {times.map((time) => (\n            <div\n              key={time}\n              className=\"schedule-day__time\"\n              style={{ gridColumn: 'times', gridRow: `time-${time.replace(':', '')}` }}\n            >\n              {time}\n            </div>\n          ))}\n          {conferences.map((conference) => (\n            <div\n              key={`${conference.title} ${conference.start} ${conference.date}`}\n              className=\"schedule-day__slot\"\n              style={{\n                gridColumn: conference.track ? `track-${conference.track}` : 'track-EN / track-FR-end',\n                gridRow: `time-${conference.start.replace(':', '')}/time-${conference.end.replace(':', '')}`,\n              }}\n            >\n              {conference.type ? (\n                <div className={`schedule-day__slot-extra schedule-day__slot-extra-${conference.type}`}>\n                  <span className=\"h6\">{conference.title}</span>\n                </div>\n              ) : (\n                <SlotItem conference={conference} />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScheduleDay;\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport ContactCard from '@con/components/common/ContactCard';\nimport '@con/styles/index.scss';\nimport useConferences from '@con/hooks/useConferences';\nimport extra from '@con/data/2022/extraConferences';\nimport { Conference } from '@con/types';\nimport ScheduleDay from './ScheduleDay';\n\nconst SchedulePage: React.ComponentType = () => {\n  const conferences = useConferences();\n\n  const days = [...conferences, ...(extra as Conference[])].reduce((acc, conference) => {\n    if (!acc[conference.date]) {\n      acc[conference.date] = [];\n    }\n    acc[conference.date].push(conference);\n    return acc;\n  }, {});\n\n  const sortedDays = Object.keys(days).sort((a, b) => {\n    const date1 = dayjs(a);\n    const date2 = dayjs(b);\n    if (date1.isBefore(date2)) return -1;\n    if (date1.isAfter(date2)) return 1;\n    return 0;\n  });\n\n  return (\n    <>\n      <div className=\"conf__schedule-page\">\n        <div className=\"container\">\n          <div className=\"schedule__header\">\n            <SectionTitle h1 dark>\n              Discover the <strong>schedule</strong>\n            </SectionTitle>\n          </div>\n          <div className=\"schedule-page__content\">\n            {sortedDays.map((key, index) => (\n              <ScheduleDay key={key} day={index + 1} date={key} conferences={days[key]} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"conf__contact\">\n        <ContactCard />\n      </div>\n    </>\n  );\n};\n\nexport default SchedulePage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PageProps } from 'gatsby';\nimport Layout from '@con/components/2022/layout';\nimport SchedulePage from '@con/components/2022/SchedulePage';\n\nconst Schedule: React.ComponentType<PageProps> = () => (\n  <Layout logoAlwaysVisible>\n    <Helmet>\n      <title>Schedule</title>\n      <meta property=\"og:title\" content=\"Schedule\" />\n      <meta name=\"twitter:title\" content=\"Schedule\" />\n    </Helmet>\n    <SchedulePage />\n  </Layout>\n);\n\nexport default Schedule;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '304104152707',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Speaker } from '@con/types';\n\nconst Avatar: React.ComponentType<{ speakers: Speaker[] }> = ({ speakers }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n\n  const getSpeakerImage = (name) => getImage(data.allFile.nodes.find((imageData) => imageData.name === name));\n  const getSize = (total) => {\n    if (1 === total) return 90;\n    if (2 === total) return 70;\n    return 50;\n  };\n  return (\n    <div className=\"schedule__slot-avatar\">\n      {speakers.map((speaker, index) => {\n        const image = getSpeakerImage(speaker.id);\n\n        return (\n          <div\n            key={speaker.name}\n            className=\"avatar__circle\"\n            style={{\n              width: `${getSize(speakers.length)}px`,\n              height: `${getSize(speakers.length)}px`,\n              left: `${(100 / (speakers.length + 1)) * (index + 1)}%`,\n              top: `${(100 / (speakers.length + 1)) * (index + 1)}%`,\n            }}\n          >\n            <GatsbyImage image={image} className=\"circle__picture\" alt={speaker.name} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React, { Fragment } from 'react';\nimport { Conference } from 'src/con/types';\nimport classNames from 'classnames';\nimport useSpeakers from '@con/hooks/useSpeakers';\nimport { getConferenceTimes } from '@con/utils';\nimport Avatar from './SlotAvatar';\n\ninterface SlotItemProps {\n  conference: Conference;\n  animated?: boolean;\n}\n\nconst SlotItem: React.ComponentType<SlotItemProps> = ({ conference, animated }) => {\n  const { title, start, end, date, slug } = conference;\n  let speakers = useSpeakers(conference.speakers);\n  if (!conference.speakers) speakers = [];\n  const uniqueCompanies = Array.from(\n    new Set(speakers.map((speaker) => speaker.company).filter((company) => !!company))\n  );\n\n  return speakers.length ? (\n    <a href={slug} className={classNames('schedule__slot', { animated })}>\n      <Avatar speakers={speakers} />\n      <div className=\"schedule__slot-infos\">\n        <span className=\"overline\">{getConferenceTimes(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <span className=\"body2\">\n          {'by '}\n          {speakers.map((speaker, index) => (\n            <Fragment key={speaker.name}>\n              <strong className=\"slot-speaker\">{speaker.name}</strong>\n              {index < speakers.length - 2 && ', '}\n              {index === speakers.length - 2 && ' & '}\n            </Fragment>\n          ))}\n        </span>\n        <p className=\"body2\">\n          {1 === speakers.length ? speakers[0].job : null}\n          {2 >= uniqueCompanies.length && 0 < uniqueCompanies.length ? (\n            <strong> @ {uniqueCompanies.join(' & ')}</strong>\n          ) : null}\n        </p>\n      </div>\n      {animated ? (\n        <svg className=\"schedule__slot-plus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 281.49 281.49\">\n          <path d=\"M140.74,0C63.14,0,0,63.14,0,140.74S63.14,281.49,140.74,281.49s140.75-63.14,140.75-140.75S218.35,0,140.74,0Zm0,263.49A122.75,122.75,0,1,1,263.49,140.74,122.88,122.88,0,0,1,140.74,263.49Z\" />\n          <path d=\"M210.91,131.74H149.74V70.58a9,9,0,1,0-18,0v61.16H70.58a9,9,0,1,0,0,18h61.16v61.17a9,9,0,0,0,18,0V149.74h61.17a9,9,0,0,0,0-18Z\" />\n        </svg>\n      ) : null}\n    </a>\n  ) : (\n    <div className=\"schedule__slot no-speaker\">\n      <div className=\"schedule__slot-infos\">\n        <span className=\"overline\">{getConferenceTimes(date, start, end)}</span>\n        <h3 className=\"h6 lined\">{title}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default SlotItem;\n","import React from 'react';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default BuyButton;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useConferences: (speaker?: string) => Conference[] = (speaker) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 1000, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            date\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const conferences = data.allMarkdownRemark.nodes\n    .filter((conferenceData) => !speaker || conferenceData.frontmatter.speakers.includes(speaker))\n    .filter((conferenceData) => conferenceData.fields.collection === `con${edition}`)\n    .map((conference) => ({\n      ...conference.frontmatter,\n      title: conference.headings?.[0].value,\n      slug: `/con/${edition}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useConferences;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/2022/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2022/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2022/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2022/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2022/schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2022/#partners',\n      text: 'Partners',\n    },\n    {\n      to: '/con/2021/review',\n      text: '2021 review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2021 review',\n        link: '/con/2021/review',\n      },\n      {\n        title: '2021 archive',\n        link: '/con/2021/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2022/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2022/#venue',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2022/schedule',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2022/#pricing',\n      },\n      {\n        title: 'Partners',\n        link: '/con/2022/#partners',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2022/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2022/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2022/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2022';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook.png`;\nexport const URL = 'https://api-platform.com/con/2022/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2022/nav';\nimport footer from '@con/data/2022/footer';\nimport prices from '@con/data/2022/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2022/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2022-tickets-304104152707',\n      validFrom: '2022-04-07',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2022',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2022/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2022-09-15',\n    endDate: '2022-09-15',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2022/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2022', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2022\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy ticket\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Speaker } from 'src/con/types';\n\nconst useSpeakers: (ids?: string[]) => Speaker[] = (ids) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n            collection\n          }\n          frontmatter {\n            name\n            id\n            number\n            job\n            company\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .filter((speakerData) => speakerData.fields.collection === `con${edition}`)\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: `/con/${edition}${speaker.fields.slug}`,\n    }));\n\n  return speakers;\n};\n\nexport default useSpeakers;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n"],"sourceRoot":""}