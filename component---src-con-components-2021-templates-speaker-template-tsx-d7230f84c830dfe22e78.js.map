{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2021/tracks.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/components/templates/SpeakerTemplate.tsx","webpack:///./src/con/components/2021/templates/SpeakerTemplate.tsx","webpack:///./src/con/hooks/useConferences.tsx","webpack:///./src/con/data/2021/nav.ts","webpack:///./src/con/data/2021/footer.ts","webpack:///./src/con/data/2021/prices.ts","webpack:///./src/con/data/2021/meta.ts","webpack:///./src/con/components/2021/layout/index.tsx","webpack:///./src/con/utils.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","SectionTitle","dark","lined","h1","tracks","id","type","date","SectionsContext","createContext","SpeakerSocialList","speaker","github","twitter","SpeakerConferenceSlot","conference","track","find","t","start","end","title","slug","short","getConferenceDate","SpeakerTemplate","pageContext","name","job","description","conferences","useConferences","data","useStaticQuery","image","getImage","allFile","nodes","imageData","firstname","split","alt","dangerouslySetInnerHTML","__html","length","map","key","logoAlwaysVisible","edition","useContext","ConfContext","allMarkdownRemark","filter","conferenceData","frontmatter","speakers","includes","fields","collection","headings","value","nav","logoLink","backLink","text","links","mobileOnly","footer","link","prices","languages","offers","limitDate","price","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","sortedOffers","sort","a","b","dayjs","isAfter","activeOffer","offer","availability","priceCurrency","url","validFrom","eventData","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","useState","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","window","history","replaceState","Provider","JSON","stringify","defer","src","LayoutBase","sortByStartDate","conference1","conference2","date1","date2","isBefore","toLocaleDate","format","convertTime","time","isMorningTime","parseInt","getConferenceTimes"],"mappings":"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","file":"component---src-con-components-2021-templates-speaker-template-tsx-d7230f84c830dfe22e78.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Track } from '../types';\n\nconst tracks: Track[] = [\n  {\n    id: 'EN',\n    type: 'English-speaking track',\n    date: '10 sep, 2021',\n  },\n  {\n    id: 'FR',\n    type: 'French-speaking track',\n    date: '10 sep, 2021',\n  },\n];\n\nexport default tracks;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport { PageProps, useStaticQuery, graphql } from 'gatsby';\nimport { getConferenceDate } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport useConferences from '@con/hooks/useConferences';\nimport SpeakerSocialList from '@con/components/2021/Speakers/SpeakerSocialList';\nimport '@con/styles/index.scss';\n\nexport const SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({\n  tracks,\n  conference,\n}) => {\n  const track = tracks.find((t) => t.id === conference.track);\n  const { start, end, date, title, slug, short } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        <span className=\"h6\">{`Track #${track.id}`}</span>\n        <span className=\"overline\">{track.type}</span>\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceDate(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    description: string;\n  };\n  tracks: Track[];\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = ({ tracks, pageContext }) => {\n  const { id, name, job, description, slug } = pageContext;\n  const conferences = useConferences(id);\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const image = getImage(data.allFile.nodes.find((imageData) => imageData.name === id));\n  const firstname = name.split(' ')[0];\n  return (\n    <div className=\"conf__speaker-profile\">\n      <div className=\"speaker__header\">\n        <SectionTitle dark lined h1>\n          <strong>{name}</strong>\n        </SectionTitle>\n        <div className=\"overline speaker__job\">{job}</div>\n      </div>\n      <div className=\"container\">\n        <div className=\"speaker__about\">\n          <div className=\"speaker__picture\">\n            <div className=\"circle__effect\">\n              <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            </div>\n          </div>\n          <div className=\"speaker__details\">\n            <div dangerouslySetInnerHTML={{ __html: description }} />\n            <SpeakerSocialList speaker={{ id, description, name, job, slug }} />\n          </div>\n          {0 < conferences.length ? (\n            <div className=\"speaker__schedule\">\n              <h2 className=\"schedule__title h5\">{`${firstname}'s schedule`}</h2>\n              {conferences.map((conference) => (\n                <SpeakerConferenceSlot key={conference.title} conference={conference} tracks={tracks} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerTemplate;\n","import React from 'react';\nimport Layout from '@con/components/2021/layout';\nimport { PageProps } from 'gatsby';\nimport SpeakerTemplateBase from '@con/components/templates/SpeakerTemplate';\nimport tracks from '@con/data/2021/tracks';\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    description: string;\n    edition: string;\n  };\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = (props) => {\n  return (\n    <Layout logoAlwaysVisible>\n      <SpeakerTemplateBase {...props} tracks={tracks} />\n    </Layout>\n  );\n};\n\nexport default SpeakerTemplate;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useConferences: (speaker?: string) => Conference[] = (speaker) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 1000, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            date\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const conferences = data.allMarkdownRemark.nodes\n    .filter((conferenceData) => !speaker || conferenceData.frontmatter.speakers.includes(speaker))\n    .filter((conferenceData) => conferenceData.fields.collection === `con${edition}`)\n    .map((conference) => ({\n      ...conference.frontmatter,\n      title: conference.headings?.[0].value,\n      slug: `/con/${edition}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useConferences;\n","const nav = {\n  logoLink: '/',\n  backLink: {\n    to: '/con/',\n    text: 'Back to current edition',\n  },\n  links: [\n    {\n      to: '/con/2021/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2021/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2021/#schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2021/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2021/review',\n      text: 'Review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2021/speakers',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2021/#schedule',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2021/#venue',\n      },\n      {\n        title: 'Current edition',\n        link: '/con/2022/',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2021/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2021/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2021/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","import { Price } from '../types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'On-site edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Early bird',\n        limitDate: '2021-04-30',\n        price: 69,\n      },\n      {\n        title: 'Regular ticket',\n        limitDate: '2021-08-20',\n        price: 89,\n      },\n      {\n        title: 'Late bird',\n        limitDate: '2021-09-09',\n        price: 109,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Online edition',\n    languages: 'English-speaking track',\n    offers: [\n      {\n        title: 'Online ticket',\n        limitDate: '2021-09-08',\n        price: 39,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","export const TITLE = 'API Platform Conference 2021';\nexport const DESCRIPTION = 'The first international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook.png`;\nexport const URL = 'https://api-platform.com/con/2021/';\n\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2021/nav';\nimport footer from '@con/data/2021/footer';\nimport prices from '@con/data/2021/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2021/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2021-tickets-146559873527',\n      validFrom: '2021-03-19',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2021',\n    description: 'The first international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2021/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2021-09-10',\n    endDate: '2021-09-10',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2021/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2021' }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase edition=\"2021\" meta={meta} logoAlwaysVisible={logoAlwaysVisible} footer={footer}>\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n"],"sourceRoot":""}