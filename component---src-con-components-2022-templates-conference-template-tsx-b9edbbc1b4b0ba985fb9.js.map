{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/templates/ConferenceTemplate.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2022/prices.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/data/2022/tracks.ts","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/components/2022/templates/ConferenceTemplate.tsx","webpack:///./src/con/data/2022/nav.ts","webpack:///./src/con/data/2022/footer.ts","webpack:///./src/con/data/2022/meta.ts","webpack:///./src/con/components/2022/layout/index.tsx","webpack:///./src/con/hooks/useSpeakers.tsx","webpack:///./src/con/utils.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerCircle.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","ConferenceTemplate","tracks","pageContext","html","title","speakerIds","speakers","trackID","track","start","end","date","useSpeakers","find","t","id","property","content","name","dark","lined","h1","length","type","getConferenceDate","minified","map","speaker","Fragment","key","hoverable","social","slug","dangerouslySetInnerHTML","__html","SectionTitle","prices","languages","offers","limitDate","price","SectionsContext","createContext","SpeakerSocialList","github","twitter","useEventBriteModal","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","BuyButton","logoAlwaysVisible","nav","logoLink","links","text","mobileOnly","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","sortedOffers","sort","a","b","dayjs","isAfter","activeOffer","offer","availability","priceCurrency","url","validFrom","eventData","description","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","image","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","value","edition","JSON","stringify","defer","LayoutBase","navButton","ids","useStaticQuery","allMarkdownRemark","nodes","filter","speakerData","includes","frontmatter","fields","collection","sortByStartDate","conference1","conference2","date1","date2","isBefore","toLocaleDate","format","convertTime","time","isMorningTime","parseInt","split","getConferenceTimes","SpeakerCircle","job","company","images","allFile","imageData","getImage","jobTitle","alt","xmlns","viewBox","d"],"mappings":"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","file":"component---src-con-components-2022-templates-conference-template-tsx-b9edbbc1b4b0ba985fb9.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport { PageProps } from 'gatsby';\nimport classNames from 'classnames';\nimport Button from '@con/components/common/Button';\nimport useSpeakers from '@con/hooks/useSpeakers';\nimport { getConferenceDate } from '@con/utils';\nimport SpeakerCircle from '@con/components/2021/Speakers/SpeakerCircle';\nimport { Track } from '@con/types';\nimport '@con/styles/index.scss';\n\ninterface ConferenceTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    speakers: string[];\n    track?: 'FR' | 'EN';\n    start: string;\n    end: string;\n    date: string;\n  };\n  tracks: Track[];\n}\n\nconst ConferenceTemplate: React.ComponentType<ConferenceTemplateProps> = ({ tracks, pageContext }) => {\n  const { html, title, speakers: speakerIds, track: trackID, start, end, date } = pageContext;\n  const speakers = useSpeakers(speakerIds);\n  const track = trackID && tracks.find((t) => t.id === trackID);\n\n  return (\n    <div className=\"conf__conference\">\n      <Helmet>\n        <title>{title}</title>\n        <meta property=\"og:title\" content={title} />\n        <meta name=\"twitter:title\" content={title} />\n      </Helmet>\n      <div className=\"container\">\n        <div className=\"conference__header\">\n          <SectionTitle dark lined h1 small={50 < title.length}>\n            <strong>{title}</strong>\n          </SectionTitle>\n          {track ? (\n            <>\n              <p className=\"overline header__subtitle\">\n                <strong>{`Track #${track.id} `}</strong>\n                {`- ${track.type}`}\n              </p>\n              <p className=\"header__date\">{getConferenceDate(date, start, end)}</p>\n            </>\n          ) : null}\n        </div>\n        <div className=\"conference__content\">\n          <div className={classNames('conference__speaker', { minified: 1 < speakers.length })}>\n            {speakers.map((speaker) => (\n              <React.Fragment key={speaker.name}>\n                <SpeakerCircle speaker={speaker} hoverable={false} social={false} />\n                <Button className=\"white square\" size=\"small\" to={speaker.slug}>\n                  See speaker details\n                </Button>\n              </React.Fragment>\n            ))}\n          </div>\n          <div\n            className=\"conference__abstract dotted-corner corner-bottom\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConferenceTemplate;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Price } from '@con/types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'On-site edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Early bird',\n        limitDate: '2022-05-06',\n        price: 89,\n      },\n      {\n        title: 'Regular ticket',\n        limitDate: '2022-08-19',\n        price: 129,\n      },\n      {\n        title: 'Late bird',\n        limitDate: '2022-09-14',\n        price: 169,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Online edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Online ticket',\n        limitDate: '2022-09-13',\n        price: 59,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '304104152707',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import { Track } from '@con/types';\n\nconst tracks: Track[] = [\n  {\n    id: 'EN',\n    type: 'English-speaking track',\n    date: '10 sep, 2021',\n  },\n  {\n    id: 'FR',\n    type: 'French-speaking track',\n    date: '10 sep, 2021',\n  },\n];\n\nexport default tracks;\n","import React from 'react';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default BuyButton;\n","import React from 'react';\nimport ConferenceTemplateBase from '@con/components/templates/ConferenceTemplate';\nimport { PageProps } from 'gatsby';\nimport Layout from '@con/components/2022/layout';\nimport tracks from '@con/data/2022/tracks';\n\ninterface ConferenceTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    speakers: string[];\n    track: 'FR' | 'EN';\n    start: string;\n    end: string;\n    date: string;\n    edition: string;\n  };\n}\n\nconst ConferenceTemplate: React.ComponentType<ConferenceTemplateProps> = (props) => {\n  return (\n    <Layout logoAlwaysVisible>\n      <ConferenceTemplateBase {...props} tracks={tracks} />\n    </Layout>\n  );\n};\n\nexport default ConferenceTemplate;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/2022/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2022/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2022/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2022/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2022/schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2022/#partners',\n      text: 'Partners',\n    },\n    {\n      to: '/con/2021/review',\n      text: '2021 review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2021 review',\n        link: '/con/2021/review',\n      },\n      {\n        title: '2021 archive',\n        link: '/con/2021/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2022/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2022/#venue',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2022/schedule',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2022/#pricing',\n      },\n      {\n        title: 'Partners',\n        link: '/con/2022/#partners',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2022/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2022/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2022/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2022';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook.png`;\nexport const URL = 'https://api-platform.com/con/2022/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2022/nav';\nimport footer from '@con/data/2022/footer';\nimport prices from '@con/data/2022/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2022/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2022-tickets-304104152707',\n      validFrom: '2022-04-07',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2022',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2022/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2022-09-15',\n    endDate: '2022-09-15',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2022/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2022', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2022\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy ticket\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Speaker } from 'src/con/types';\n\nconst useSpeakers: (ids?: string[]) => Speaker[] = (ids) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n            collection\n          }\n          frontmatter {\n            name\n            id\n            number\n            job\n            company\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .filter((speakerData) => speakerData.fields.collection === `con${edition}`)\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: `/con/${edition}${speaker.fields.slug}`,\n    }));\n\n  return speakers;\n};\n\nexport default useSpeakers;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Speaker } from '@con/types';\nimport SpeakerSocialList from './SpeakerSocialList';\n\ninterface SpeakerCircleProps {\n  speaker: Speaker;\n  social?: boolean;\n  hoverable?: boolean;\n}\n\nconst SpeakerCircle: React.ComponentType<SpeakerCircleProps> = ({ speaker, social = true, hoverable = true }) => {\n  const { id, name, job, company } = speaker;\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 240, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const images = data.allFile.nodes.find((imageData) => imageData.name === id);\n  const image = images && getImage(images);\n\n  const speakerData = {\n    '@context': 'http://schema.org',\n    '@type': 'Person',\n    name: speaker.name,\n    jobTitle: `${speaker.job} ${speaker.company ? `@ ${speaker.company}` : ''}`,\n  };\n\n  return (\n    <div className=\"conf__speaker-resume\">\n      <Helmet>\n        <script type=\"application/ld+json\">{JSON.stringify(speakerData)}</script>\n      </Helmet>\n      <a className={classNames('conf__speaker-content', { hoverable })} href={speaker.slug}>\n        <div className=\"circle__effect\">\n          <div className=\"circle\">\n            <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            <svg className=\"circle__plus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 281.49 281.49\">\n              <path d=\"M140.74,0C63.14,0,0,63.14,0,140.74S63.14,281.49,140.74,281.49s140.75-63.14,140.75-140.75S218.35,0,140.74,0Zm0,263.49A122.75,122.75,0,1,1,263.49,140.74,122.88,122.88,0,0,1,140.74,263.49Z\" />\n              <path d=\"M210.91,131.74H149.74V70.58a9,9,0,1,0-18,0v61.16H70.58a9,9,0,1,0,0,18h61.16v61.17a9,9,0,0,0,18,0V149.74h61.17a9,9,0,0,0,0-18Z\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"infos\">\n          <h3 className=\"h5\">{name}</h3>\n          <p className=\"overline lined\">\n            {job}\n            <br />\n            {company ? (\n              <>\n                @ <strong>{company}</strong>\n              </>\n            ) : null}\n          </p>\n        </div>\n      </a>\n      {social && <SpeakerSocialList speaker={speaker} />}\n    </div>\n  );\n};\n\nexport default SpeakerCircle;\n"],"sourceRoot":""}