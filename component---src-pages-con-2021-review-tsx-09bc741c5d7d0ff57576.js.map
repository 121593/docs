{"version":3,"sources":["webpack:///./src/components/con/2021/Review/ReviewCover.tsx","webpack:///./src/components/con/2021/Review/ReviewItem.tsx","webpack:///./src/components/con/2021/Review/ReviewList.tsx","webpack:///./src/components/con/2021/Review/ReviewPictureGallery.tsx","webpack:///./src/components/con/2021/Review/index.tsx","webpack:///./src/pages/con/2021/review.tsx","webpack:///./src/components/con/common/AnimatedPictureImage.tsx","webpack:///./src/components/con/common/PictureGallery.tsx","webpack:///./src/components/con/common/Button.tsx"],"names":["Review","getRef","useDynamicRefs","scrollToList","useCallback","reviewList","current","scrollIntoView","behavior","className","src","alt","Button","onClick","title","imageId","children","images","useStaticQuery","allFile","nodes","find","imageData","name","image","getImage","animationLeft","useAnimation","undefined","animationRight","animationScale","ref","ReviewList","reviewRef","setRef","ReviewItem","href","target","rel","size","to","ReviewPictureGallery","map","item","PictureGallery","link","index","key","ReviewCover","Conf2021","logoAlwaysVisible","edition","ContactCard","AnimatedPictureImage","direction","animation","React","Children","child","empty","external","disabled","props","classNames","classnames","small"],"mappings":"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","file":"component---src-pages-con-2021-review-tsx-09bc741c5d7d0ff57576.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport Button from '@con/common/Button';\nimport useDynamicRefs from '@components/con/hooks/useDynamicRefs';\n\nconst Review: React.ComponentType = () => {\n  const [getRef] = useDynamicRefs();\n\n  const scrollToList = useCallback(() => {\n    const reviewList = getRef('review-list');\n\n    if (reviewList) reviewList.current.scrollIntoView({ behavior: 'smooth' });\n  }, [getRef]);\n\n  return (\n    <section>\n      <div className=\"conf__review-bg\">\n        <StaticImage\n          src=\"../../images/editions/2021.jpg\"\n          alt=\"Api platform con 2021 picture\"\n          className=\"review__bg-image\"\n        />\n      </div>\n      <div className=\"container conf__review-cover\">\n        <h1 className=\"review__cover-title\">\n          <span>2021 review</span>\n          <span className=\"uppercase\">It was a blast!</span>\n        </h1>\n        <p className=\"review__cover-text\">\n          Thank you again for joining and trusting us on this first edition!\n          <br />\n          We are looking forward to seeing you all again next year.\n        </p>\n        <div className=\"review__cover-buttons\">\n          <Button onClick={scrollToList}>Discover our review</Button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Review;\n","import React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport useAnimation from '@con/hooks/useAnimation';\n\ninterface ReviewProps {\n  title: JSX.Element;\n  imageId: string;\n}\n\nconst Review: React.ComponentType<ReviewProps> = ({ title, imageId, children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"review2021\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(height: 350, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const images = data.allFile.nodes.find((imageData) => imageData.name === imageId);\n  const image = images && getImage(images);\n\n  const animationLeft = useAnimation('left', undefined, undefined, undefined);\n  const animationRight = useAnimation('right');\n  const animationScale = useAnimation('scale', 1.5, 0.5, undefined, '0px 0px -20% 0px');\n\n  return (\n    <div className=\"conf__review-item\">\n      <div className=\"review-item__title\" ref={animationScale}>\n        {title}\n      </div>\n      <div className=\"review-item__aside\">\n        <div className=\"review-item__picture\" ref={animationLeft}>\n          <div className=\"w-full h-full\">\n            <GatsbyImage image={image} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"review-item__content\" ref={animationRight}>\n          <div className=\"review-item__card dotted-corner\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import React from 'react';\nimport Button from '@con/common/Button';\nimport useDynamicRefs from '@components/con/hooks/useDynamicRefs';\nimport ReviewItem from './ReviewItem';\n\nconst ReviewList: React.ComponentType = () => {\n  const [, setRef] = useDynamicRefs();\n  const reviewRef = setRef('review-list');\n\n  return (\n    <section className=\"conf__review-list\" ref={reviewRef}>\n      <div className=\"container\">\n        <ReviewItem\n          imageId=\"place\"\n          title={\n            <>\n              <strong>1</strong>\n              <span>amazing place</span>\n            </>\n          }\n        >\n          <div className=\"h5 lined lined-left mb-20 font-bold\">In the heart of Europe...</div>\n          <p>\n            API Platform Con took place in Lille, meeting point of European cities and touristic capital of the Flemish\n            region.\n          </p>\n          <p>\n            Tracks were given in{' '}\n            <a href=\"https://www.euratechnologies.com/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              Euratechnologies\n            </a>\n            , the 1st incubator & startups accelerator in France (only at 1 hour from Paris, 30 min from Brussels and 10\n            hours from New York ;))\n          </p>\n        </ReviewItem>\n        <ReviewItem\n          imageId=\"speakers\"\n          title={\n            <>\n              <strong>15</strong>\n              <span>incredible speakers</span>\n            </>\n          }\n        >\n          <div className=\"h5 lined lined-left mb-20 font-bold\">They made this event so amazing!</div>\n          <p>Some of the best speakers from our ecosystem were on stage and shared their knowledge on 2 languages.</p>\n          <p>\n            A wide variety of topics were discussed and we hope you got inspiration to pursue building your web\n            applications.\n          </p>\n          <p>And even if you would never have guessed it, some of them were on stage for the very first time!</p>\n          <Button className=\"square\" size=\"small\" to=\"/con/2021/speakers\">\n            See all speakers\n          </Button>\n        </ReviewItem>\n        <ReviewItem\n          imageId=\"attendees\"\n          title={\n            <>\n              <strong>500</strong>\n              <span>attendees</span>\n            </>\n          }\n        >\n          <div className=\"h5 lined lined-left mb-20 font-bold\">Thank you 500 times!</div>\n          <p>\n            150 people were in Lille and more than 400 people from all over the world listened to our talks on\n            Livestorm. The online participation rate has reached 75%!\n          </p>\n          <p>Thank you so much!</p>\n        </ReviewItem>\n        <ReviewItem\n          imageId=\"sponsors\"\n          title={\n            <>\n              <strong>12</strong>\n              <span>sponsors and partners</span>\n            </>\n          }\n        >\n          <div className=\"h5 lined lined-left mb-20 font-bold\">They made this possible!</div>\n          <p>\n            This event would not have been possible without our partners such as Saveur Bière, Sensiolabs, Vestiaire\n            Collective, Wine in Black, Fairness.coop, Orbitale.io and many more.\n          </p>\n          <p>Thank you again!</p>\n          <Button className=\"square\" size=\"small\" to=\"mailto:event@les-tilleuls.coop\">\n            Become a partner\n          </Button>\n        </ReviewItem>\n        <ReviewItem\n          imageId=\"food\"\n          title={\n            <>\n              <strong>1</strong>\n              <span>vegetarian buffet</span>\n            </>\n          }\n        >\n          <div className=\"h5 lined lined-left mb-20 font-bold\">Yum!</div>\n          <p>We are proud to have served our community vegetarian (and nutritious) food.</p>\n          <p>And we think you liked it as much as we did: all the booths were empty!</p>\n        </ReviewItem>\n      </div>\n    </section>\n  );\n};\n\nexport default ReviewList;\n","import React from 'react';\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport PictureGallery from '@components/con/common/PictureGallery';\n\nconst ReviewPictureGallery: React.ComponentType = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(\n        filter: { sourceInstanceName: { eq: \"review2021\" }, name: { regex: \"/^pic-/\" } }\n        sort: { fields: name }\n      ) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(height: 350, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const images: { image: IGatsbyImageData; name: string }[] = data.allFile.nodes.map((item) => ({\n    image: getImage(item),\n    name: item.name,\n  }));\n  return (\n    <section>\n      <PictureGallery link=\"https://www.flickr.com/photos/194052559@N02/albums/72157719936921021\">\n        {images.map(({ image, name }, index) => (\n          <GatsbyImage key={`${name} ${index}`} image={image} alt={`API Platform con 2021 - ${name}`} />\n        ))}\n      </PictureGallery>\n    </section>\n  );\n};\n\nexport default ReviewPictureGallery;\n","import React from 'react';\nimport ReviewCover from './ReviewCover';\nimport ReviewList from './ReviewList';\nimport ReviewPictureGallery from './ReviewPictureGallery';\n\nconst Review: React.ComponentType = () => {\n  return (\n    <>\n      <ReviewCover />\n      <ReviewList />\n      <ReviewPictureGallery />\n    </>\n  );\n};\n\nexport default Review;\n","import React from 'react';\nimport Layout from '@components/con/layout';\nimport ContactCard from '@con/common/ContactCard';\nimport Review from '@components/con/2021/Review';\nimport { PageProps } from 'gatsby';\n\nconst Conf2021: React.ComponentType<PageProps> = () => {\n  return (\n    <Layout logoAlwaysVisible edition=\"2021\">\n      <Review />\n      <div className=\"conf__contact\">\n        <ContactCard />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Conf2021;\n","import React from 'react';\nimport '@styles/components/con/home/index.scss';\nimport useAnimation, { DirectionType } from '@con/hooks/useAnimation';\n\ninterface AnimatedPictureImageProps {\n  direction?: DirectionType;\n}\n\nconst AnimatedPictureImage: React.ComponentType<AnimatedPictureImageProps> = ({ direction = 'scale', children }) => {\n  const animation = useAnimation(direction);\n  return (\n    <div className=\"conf__picture-image\" ref={animation}>\n      {children}\n    </div>\n  );\n};\n\nexport default AnimatedPictureImage;\n","import React from 'react';\nimport '@styles/components/con/home/index.scss';\nimport AnimatedPictureImage from '@con/common/AnimatedPictureImage';\nimport Button from '@con/common/Button';\n\ninterface PictureGalleryProps {\n  link?: string;\n}\n\nconst PictureGallery: React.ComponentType<PictureGalleryProps> = ({ link, children }) => {\n  return (\n    <section className=\"conf__gallery\">\n      <div className=\"container\">\n        <div className=\"conf__picture-grid\">\n          {React.Children.map(children, (child) => (\n            <AnimatedPictureImage>{child}</AnimatedPictureImage>\n          ))}\n        </div>\n        {link ? (\n          <Button className=\"mx-auto mt-20\" empty external to={link}>\n            See more pics on Flickr\n          </Button>\n        ) : null}\n      </div>\n    </section>\n  );\n};\n\nexport default PictureGallery;\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}